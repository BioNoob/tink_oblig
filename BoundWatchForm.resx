<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label41.Text" xml:space="preserve">
    <value>Слева блок акутальных данных
Справа блок проданных
Сверху блок информации
Если актуальных не осталось, выводить все в 0, кроме цен на сегодня 
и дат выплат

Даты выплат вообще вынести в блок информации

Может вообще сделать две разные формы, под закртые и открытые позиции
И если есть обе показывать то и показывать две формы</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fwA=
</value>
  </data>
</root>